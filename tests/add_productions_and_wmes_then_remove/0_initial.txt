WMES

WME { id: 0, fields: [1, 10, 2], tokens: ["2"] }, refs: 3
WME { id: 1, fields: [2, 12, 3], tokens: ["3"] }, refs: 3
WME { id: 2, fields: [3, 11, 20], tokens: [] }, refs: 2
WME { id: 3, fields: [2, 10, 3], tokens: ["4"] }, refs: 3
WME { id: 4, fields: [3, 12, 4], tokens: ["5"] }, refs: 3
WME { id: 5, fields: [5, 11, 21], tokens: ["6", "7"] }, refs: 4
WME { id: 6, fields: [6, 11, 23], tokens: [] }, refs: 2

TOKENS

Token { id: 0, parent: None, wme: None, node: 0, children: ["1"], neg_join_res: , ncc_res: , owner: None }, refs: 4
Token { id: 1, parent: Some("0"), wme: None, node: 1, children: ["2", "4"], neg_join_res: , ncc_res: , owner: None }, refs: 5
  Token { id: 2, parent: Some("1"), wme: Some([1, 10, 2]), node: 3, children: ["3"], neg_join_res: , ncc_res: , owner: None }, refs: 5
    Token { id: 3, parent: Some("2"), wme: Some([2, 12, 3]), node: 5, children: ["6"], neg_join_res: , ncc_res: , owner: None }, refs: 5
      Token { id: 6, parent: Some("3"), wme: Some([5, 11, 21]), node: 8, children: [], neg_join_res: , ncc_res: , owner: None }, refs: 4
  Token { id: 4, parent: Some("1"), wme: Some([2, 10, 3]), node: 3, children: ["5"], neg_join_res: , ncc_res: , owner: None }, refs: 5
        Token { id: 5, parent: Some("4"), wme: Some([3, 12, 4]), node: 5, children: ["7"], neg_join_res: , ncc_res: , owner: None }, refs: 5
          Token { id: 7, parent: Some("5"), wme: Some([5, 11, 21]), node: 8, children: [], neg_join_res: , ncc_res: , owner: None }, refs: 4

BETA NETWORK

Beta { id: 0, items: [0], parent: None, children: [1] }, refs: 3
Beta { id: 1, items: [1], parent: Some(0), children: [2] }, refs: 3
  Join { id: 2, parent: 1, children: [3], tests: [] }, refs: 3
    Beta { id: 3, items: [2, 4], parent: Some(2), children: [4] }, refs: 4
      Join { id: 4, parent: 3, children: [5], tests: [TestAtJoinNode { arg_one: 0, distance_to_wme: 0, arg_two: 2 }] }, refs: 3
        Beta { id: 5, items: [3, 5], parent: Some(4), children: [6, 7] }, refs: 5
          Join { id: 6, parent: 5, children: [9000], tests: [TestAtJoinNode { arg_one: 0, distance_to_wme: 0, arg_two: 2 }] }, refs: 3
            Prod { id: 9000, production: Production { id: 9000, conditions: P[V_0 - C_10 - V_1], P[V_1 - C_12 - V_2], P[V_2 - C_11 - C_20],  } }, refs: 2
          Join { id: 7, parent: 5, children: [8], tests: [] }, refs: 3
              Beta { id: 8, items: [6, 7], parent: Some(7), children: [9] }, refs: 4
                Join { id: 9, parent: 8, children: [9001], tests: [] }, refs: 3
                  Prod { id: 9001, production: Production { id: 9001, conditions: P[V_0 - C_10 - V_1], P[V_1 - C_12 - V_2], P[V_3 - C_11 - C_21], P[V_4 - C_11 - C_23],  } }, refs: 2

ALPHA NETWORK

ConstantTest([None, Some(10), None]) :
Alpha { id: 0, successors: ["2"], items: AlphaItem { id: 9, wme: [1, 10, 2], alpha_mem: 0,},AlphaItem { id: 12, wme: [2, 10, 3], alpha_mem: 0,}, }
, refs: 6
ConstantTest([None, Some(12), None]) :
Alpha { id: 1, successors: ["4"], items: AlphaItem { id: 10, wme: [2, 12, 3], alpha_mem: 1,},AlphaItem { id: 13, wme: [3, 12, 4], alpha_mem: 1,}, }
, refs: 6
ConstantTest([None, Some(11), Some(20)]) :
Alpha { id: 2, successors: ["6"], items: AlphaItem { id: 11, wme: [3, 11, 20], alpha_mem: 2,}, }
, refs: 4
ConstantTest([None, Some(11), Some(21)]) :
Alpha { id: 3, successors: ["7"], items: AlphaItem { id: 14, wme: [5, 11, 21], alpha_mem: 3,}, }
, refs: 4
ConstantTest([None, Some(11), Some(23)]) :
Alpha { id: 4, successors: ["9"], items: AlphaItem { id: 15, wme: [6, 11, 23], alpha_mem: 4,}, }
, refs: 4

PRODUCTIONS

Prod { id: 9000, production: Production { id: 9000, conditions: P[V_0 - C_10 - V_1], P[V_1 - C_12 - V_2], P[V_2 - C_11 - C_20],  } }, refs: 2
Prod { id: 9001, production: Production { id: 9001, conditions: P[V_0 - C_10 - V_1], P[V_1 - C_12 - V_2], P[V_3 - C_11 - C_21], P[V_4 - C_11 - C_23],  } }, refs: 2
